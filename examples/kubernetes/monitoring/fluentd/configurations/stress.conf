<filter kubernetes.var.log.containers.stress**>
  @type parser
  #@log_level trace
  key_name log
  reserve_data true
  <parse>
    ### BUG here: to second regexp is too broad and catches all the
    @type multi_format
    <pattern>
        format regexp
        expression /^stress-ng: info:.*Time (?<time>\d*), counter (?<counter>\d*), diff (?<diff>\d*)/
        types counter:integer,diff:integer,time:string
        time_format %s
    </pattern>
    <pattern>
        format regexp
        expression /^(.*?)stress-ng: info:(.*?)\[\d*\](.*?)(?<bogo_ops>\d+.\d*)(.*?)(?<real_time>\d+.\d*)(.*?)(?<user_time>\d+.\d*)(.*?)(?<system_time>\d+.\d*)(.*?)(?<bogo_ops_per_second_real_time>\d+.\d*)(.*?)(?<bogo_ops_per_second_usr_sys_time>\d+.\d*)/
        types bogo_ops:float, real_time:float, user_time:float, system_time:float, bogo_ops_per_second_real_time:float, bogo_ops_per_second_usr_sys_time:float
    </pattern>
    ### Because any parser errors are ignored, it easy to misconfigure above patterns !!!!
    ### TO DEBUG ISSUES WITH PARTICULAR above patterns just enable this with the same configuration
    #@type regexp
    #expression /^(.*?)stress-ng: info:(.*?)\[\d*\](.*?)(?<bogo_ops>\d+.\d*)(.*?)(?<real_time>\d+.\d*)(.*?)(?<user_time>\d+.\d*)(.*?)(?<system_time>\d+.\d*)(.*?)(?<bogo_ops_per_second_real_time>\d+.\d*)(.*?)(?<bogo_ops_per_second_usr_sys_time>\d+.\d*)/
    #types bogo_ops:float, real_time:float, user_time:float, system_time:float, bogo_ops_per_second_real_time:float, bogo_ops_per_second_usr_sys_time:float
    #expression /^stress-ng: info:.*Time (?<time>\d*), counter (?<diff>\d*)/
    #types diff:integer,time:string
    #time_format %s
  </parse>
</filter>

<filter kubernetes.var.log.containers.stress**>
  @type prometheus
  <metric>
    name apm_stress_ng_bogo_ops_counter
    type counter  # we need counter because we use diff
    desc Counter bogo ops per proc stress-ng, updated per 1 sec
    key diff
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.stress**>
  @type prometheus
  <metric>
    name apm_stress_ng_bogo_ops
    type gauge
    desc Summary bogo ops
    key bogo_ops
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.stress**>
  @type prometheus
  <metric>
    name apm_stress_ng_real_time
    type gauge
    desc Summary real_time (secs)
    key real_time
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.stress**>
  @type prometheus
  <metric>
    name apm_stress_ng_user_time
    type gauge
    desc Summary user_time (secs)
    key user_time
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.stress**>
  @type prometheus
  <metric>
    name apm_stress_ng_system_time
    type gauge
    desc Summary system_time (secs)
    key user_time
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.stress**>
  @type prometheus
  <metric>
    name apm_stress_ng_bogo_ops_per_second_real_time
    type gauge
    desc Summary bogo ops/s real time
    key bogo_ops_per_second_real_time
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.stress**>
  @type prometheus
  <metric>
    name apm_stress_ng_bogo_ops_per_second_usr_sys_time
    type gauge
    desc Summary bogo ops/s usr+sys time
    key bogo_ops_per_second_usr_sys_time
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.stress**>
  @type prometheus
  <metric>
    name apm_stress_ng_stdout_lines
    type counter
    desc stdout_lines
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>
