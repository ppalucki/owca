runner: !MeasurementRunner
  node: !StaticNode
    tasks: []
  externals:
    # Stream logs from mutilate-stress-0 container, prase using provided regexp and generate metrics.
    # LABEL_ and METRIC_ are special prefixes to distingush values from label values after parsing single line.
    - !External
        key: INSTANCE
        args: ['docker', 'logs', '-f', '--tail=0', 'mutilate-stress-0']
        metric_base_name: memcached_
        regexp: '^(?P<LABEL_type>\S+)\s+(?P<METRIC_latency_us_avg>\d+\.\d+)\s+(?P<METRIC_latency_us_min>\d+\.\d+)\s+(?P<METRIC_latency_us_1st>\d+\.\d+)\s+(?P<METRIC_latency_us_5th>\d+\.\d+)\s+(?P<METRIC_latency_us_10th>\d+\.\d+)\s+(?P<METRIC_latency_us_90th>\d+\.\d+)\s+(?P<METRIC_latency_us_95th>\d+\.\d+)\s+(?P<METRIC_latency_us_99th>\d+\.\d+)\s+(?P<METRIC_qps>\d+\.\d+)\s+(?P<METRIC_target>\d+)$'
        labels: {'stress_id': 'INSTANCE'}
        restart_delay: 60

    # The same as above but tries to watch many containers at once: mutilate-stress-1, mutilate-stress-2.
    - !MultiExternal
        key: INSTANCE
        values: ['1','2']
        args: ['docker', 'logs', '-f', '--tail=0', 'mutilate-stress-INSTANCE']
        metric_base_name: memcached_
        regexp: '^(?P<LABEL_type>\S+)\s+(?P<METRIC_latency_us_avg>\d+\.\d+)\s+(?P<METRIC_latency_us_min>\d+\.\d+)\s+(?P<METRIC_latency_us_1st>\d+\.\d+)\s+(?P<METRIC_latency_us_5th>\d+\.\d+)\s+(?P<METRIC_latency_us_10th>\d+\.\d+)\s+(?P<METRIC_latency_us_90th>\d+\.\d+)\s+(?P<METRIC_latency_us_95th>\d+\.\d+)\s+(?P<METRIC_latency_us_99th>\d+\.\d+)\s+(?P<METRIC_qps>\d+\.\d+)\s+(?P<METRIC_target>\d+)$'
        labels: {'stress_id': 'INSTANCE'}
        restart_delay: 60
    
